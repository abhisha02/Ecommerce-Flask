{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: []\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const existingItem = state.cartItems.find(item => item.id === action.payload.id);\n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        state.cartItems.push({\n          ...action.payload,\n          quantity: 1\n        });\n      }\n    },\n    updateQuantity: (state, action) => {\n      const item = state.cartItems.find(item => item.id === action.payload.id);\n      if (item) {\n        item.quantity = action.payload.quantity;\n      }\n    },\n    removeFromCart: (state, action) => {\n      state.cartItems = state.cartItems.filter(item => item.id !== action.payload);\n    }\n  }\n});\nexport const {\n  addToCart,\n  updateQuantity,\n  removeFromCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","cartSlice","name","reducers","addToCart","state","action","existingItem","find","item","id","payload","quantity","push","updateQuantity","removeFromCart","filter","actions","reducer"],"sources":["D:/Ecommerce_flask/Ecommercefrontend/Appdownload/src/store/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      const existingItem = state.cartItems.find((item) => item.id === action.payload.id);\r\n      if (existingItem) {\r\n        existingItem.quantity += 1;\r\n      } else {\r\n        state.cartItems.push({ ...action.payload, quantity: 1 });\r\n      }\r\n    },\r\n    updateQuantity: (state, action) => {\r\n      const item = state.cartItems.find((item) => item.id === action.payload.id);\r\n      if (item) {\r\n        item.quantity = action.payload.quantity;\r\n      }\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      state.cartItems = state.cartItems.filter((item) => item.id !== action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart, updateQuantity, removeFromCart } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAMC,YAAY,GAAGF,KAAK,CAACL,SAAS,CAACQ,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAClF,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACK,QAAQ,IAAI,CAAC;MAC5B,CAAC,MAAM;QACLP,KAAK,CAACL,SAAS,CAACa,IAAI,CAAC;UAAE,GAAGP,MAAM,CAACK,OAAO;UAAEC,QAAQ,EAAE;QAAE,CAAC,CAAC;MAC1D;IACF,CAAC;IACDE,cAAc,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAMG,IAAI,GAAGJ,KAAK,CAACL,SAAS,CAACQ,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAC1E,IAAID,IAAI,EAAE;QACRA,IAAI,CAACG,QAAQ,GAAGN,MAAM,CAACK,OAAO,CAACC,QAAQ;MACzC;IACF,CAAC;IACDG,cAAc,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACL,SAAS,GAAGK,KAAK,CAACL,SAAS,CAACgB,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;IAChF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEP,SAAS;EAAEU,cAAc;EAAEC;AAAe,CAAC,GAAGd,SAAS,CAACgB,OAAO;AAC9E,eAAehB,SAAS,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}