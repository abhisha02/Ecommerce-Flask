{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../services/api';\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async (params = {}) => {\n  const response = await api.get('/products', {\n    params\n  });\n  return response.data;\n});\nexport const createProduct = createAsyncThunk('products/createProduct', async productData => {\n  const response = await api.post('/products', productData);\n  return response.data;\n});\nexport const updateProduct = createAsyncThunk('products/updateProduct', async ({\n  id,\n  data\n}) => {\n  const response = await api.put(`/products/${id}`, data);\n  return response.data;\n});\nexport const deleteProduct = createAsyncThunk('products/deleteProduct', async id => {\n  await api.delete(`/products/${id}`);\n  return id;\n});\nconst productSlice = createSlice({\n  name: 'products',\n  initialState: {\n    items: [],\n    loading: false,\n    error: null,\n    total: 0,\n    pages: 1,\n    currentPage: 1\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.loading = true;\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.loading = false;\n      state.items = action.payload.items;\n      state.total = action.payload.total;\n      state.pages = action.payload.pages;\n      state.currentPage = action.payload.current_page;\n    }).addCase(fetchProducts.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    });\n  }\n});\nexport default productSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","fetchProducts","params","response","get","data","createProduct","productData","post","updateProduct","id","put","deleteProduct","delete","productSlice","name","initialState","items","loading","error","total","pages","currentPage","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","current_page","rejected","message","reducer"],"sources":["D:/Ecommerce_flask/Ecommercefrontend/Appdownload/src/store/slices/productSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from '../../services/api';\r\n\r\nexport const fetchProducts = createAsyncThunk(\r\n  'products/fetchProducts',\r\n  async (params = {}) => {\r\n    const response = await api.get('/products', { params });\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const createProduct = createAsyncThunk(\r\n  'products/createProduct',\r\n  async (productData) => {\r\n    const response = await api.post('/products', productData);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const updateProduct = createAsyncThunk(\r\n  'products/updateProduct',\r\n  async ({ id, data }) => {\r\n    const response = await api.put(`/products/${id}`, data);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const deleteProduct = createAsyncThunk(\r\n  'products/deleteProduct',\r\n  async (id) => {\r\n    await api.delete(`/products/${id}`);\r\n    return id;\r\n  }\r\n);\r\n\r\nconst productSlice = createSlice({\r\n  name: 'products',\r\n  initialState: {\r\n    items: [],\r\n    loading: false,\r\n    error: null,\r\n    total: 0,\r\n    pages: 1,\r\n    currentPage: 1\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchProducts.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchProducts.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.items = action.payload.items;\r\n        state.total = action.payload.total;\r\n        state.pages = action.payload.pages;\r\n        state.currentPage = action.payload.current_page;\r\n      })\r\n      .addCase(fetchProducts.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      });\r\n  }\r\n});\r\n\r\nexport default productSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,GAAG,MAAM,oBAAoB;AAEpC,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAC3C,wBAAwB,EACxB,OAAOG,MAAM,GAAG,CAAC,CAAC,KAAK;EACrB,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,WAAW,EAAE;IAAEF;EAAO,CAAC,CAAC;EACvD,OAAOC,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGP,gBAAgB,CAC3C,wBAAwB,EACxB,MAAOQ,WAAW,IAAK;EACrB,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACQ,IAAI,CAAC,WAAW,EAAED,WAAW,CAAC;EACzD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMI,aAAa,GAAGV,gBAAgB,CAC3C,wBAAwB,EACxB,OAAO;EAAEW,EAAE;EAAEL;AAAK,CAAC,KAAK;EACtB,MAAMF,QAAQ,GAAG,MAAMH,GAAG,CAACW,GAAG,CAAC,aAAaD,EAAE,EAAE,EAAEL,IAAI,CAAC;EACvD,OAAOF,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMO,aAAa,GAAGb,gBAAgB,CAC3C,wBAAwB,EACxB,MAAOW,EAAE,IAAK;EACZ,MAAMV,GAAG,CAACa,MAAM,CAAC,aAAaH,EAAE,EAAE,CAAC;EACnC,OAAOA,EAAE;AACX,CACF,CAAC;AAED,MAAMI,YAAY,GAAGhB,WAAW,CAAC;EAC/BiB,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,CAAC;IACRC,KAAK,EAAE,CAAC;IACRC,WAAW,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACzB,aAAa,CAAC0B,OAAO,EAAGC,KAAK,IAAK;MACzCA,KAAK,CAACV,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDQ,OAAO,CAACzB,aAAa,CAAC4B,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACX,KAAK,GAAGa,MAAM,CAACC,OAAO,CAACd,KAAK;MAClCW,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO,CAACX,KAAK;MAClCQ,KAAK,CAACP,KAAK,GAAGS,MAAM,CAACC,OAAO,CAACV,KAAK;MAClCO,KAAK,CAACN,WAAW,GAAGQ,MAAM,CAACC,OAAO,CAACC,YAAY;IACjD,CAAC,CAAC,CACDN,OAAO,CAACzB,aAAa,CAACgC,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACT,KAAK,GAAGW,MAAM,CAACX,KAAK,CAACe,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAepB,YAAY,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}